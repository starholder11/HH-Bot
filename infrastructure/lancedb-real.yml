AWSTemplateFormatVersion: '2010-09-09'
Description: 'Real LanceDB Service on ECS with actual vector database functionality'

Parameters:
  VpcId:
    Type: String
    Default: vpc-13e0de6a
    Description: VPC ID for the deployment

  PrivateSubnetIds:
    Type: CommaDelimitedList
    Default: "subnet-fc7b5c9a,subnet-a796b7f8"
    Description: Private subnet IDs

  OpenAISecretArn:
    Type: String
    Default: arn:aws:secretsmanager:us-east-1:781939061434:secret:openai-api-key-plain-ObIbHG
    Description: ARN of the OpenAI API key secret

Resources:
  # ECS Cluster
  LanceDBCluster:
    Type: AWS::ECS::Cluster
    Properties:

      CapacityProviders:
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1

  # Security Group for LanceDB service
  LanceDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for LanceDB service
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          SourceSecurityGroupId: !Ref ALBSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  # Security Group for Application Load Balancer
  ALBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for LanceDB ALB
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  # Application Load Balancer
  LanceDBLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:

      Scheme: internet-facing
      Type: application
      Subnets: !Ref PrivateSubnetIds
      SecurityGroups:
        - !Ref ALBSecurityGroup

  # Target Group
  LanceDBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:

      Port: 8000
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip
      HealthCheckPath: /health
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 5

  # ALB Listener
  LanceDBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref LanceDBTargetGroup
      LoadBalancerArn: !Ref LanceDBLoadBalancer
      Port: 80
      Protocol: HTTP

  # IAM Role for ECS Tasks
  LanceDBTaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
      Policies:
        - PolicyName: CloudWatchLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*'
        - PolicyName: SecretsAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:openai-api-key*'

  # CloudWatch Log Group
  LanceDBLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /ecs/lancedb-real
      RetentionInDays: 7

  # ECS Task Definition
  LanceDBTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: lancedb-real
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Cpu: 1024
      Memory: 2048
      ExecutionRoleArn: !GetAtt LanceDBTaskRole.Arn
      TaskRoleArn: !GetAtt LanceDBTaskRole.Arn
      ContainerDefinitions:
        - Name: lancedb
          Image: 781939061434.dkr.ecr.us-east-1.amazonaws.com/lancedb-service:v9
          PortMappings:
            - ContainerPort: 8000
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LanceDBLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs
          Environment:
            - Name: NODE_ENV
              Value: production
            - Name: PORT
              Value: "8000"
            - Name: LANCEDB_PATH
              Value: /tmp/lancedb
          Secrets:
            - Name: OPENAI_API_KEY
              ValueFrom: !Ref OpenAISecretArn

  # ECS Service
  LanceDBService:
    Type: AWS::ECS::Service
    DependsOn: LanceDBListener
    Properties:

      Cluster: !Ref LanceDBCluster
      TaskDefinition: !Ref LanceDBTaskDefinition
      LaunchType: FARGATE
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref LanceDBSecurityGroup
          Subnets: !Ref PrivateSubnetIds
      LoadBalancers:
        - ContainerName: lancedb
          ContainerPort: 8000
          TargetGroupArn: !Ref LanceDBTargetGroup
      HealthCheckGracePeriodSeconds: 300

Outputs:
  LoadBalancerURL:
    Description: Load Balancer URL for LanceDB API
    Value: !Sub 'http://${LanceDBLoadBalancer.DNSName}'
    Export:
      Name: !Sub '${AWS::StackName}-LoadBalancerURL'

  ServiceName:
    Description: ECS Service Name
    Value: !Ref LanceDBService
    Export:
      Name: !Sub '${AWS::StackName}-ServiceName'

  ClusterName:
    Description: ECS Cluster Name
    Value: !Ref LanceDBCluster
    Export:
      Name: !Sub '${AWS::StackName}-ClusterName'
